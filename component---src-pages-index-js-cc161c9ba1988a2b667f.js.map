{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Home","props","hexTable","value","toString","convertToHex","color","first","Math","floor","second","convertAlfa","alfa","handleSubmit","event","state","red","green","blue","hexValue","setState","result","preventDefault","handleChange","nam","target","name","val","render","this","className","id","onSubmit","type","placeholder","min","max","onChange","React","Component"],"mappings":"uIAEMA,E,YAEJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAUFC,SAAW,SAACC,GACV,GAAIA,EAAQ,GAAI,OAAOA,EAAMC,WAC7B,OAAQD,GACN,KAAK,GACH,MAAO,IACT,KAAK,GACH,MAAO,IACT,KAAK,GACH,MAAO,IACT,KAAK,GACH,MAAO,IACT,KAAK,GACH,MAAO,IACT,KAAK,GACH,MAAO,MAzBM,EA8BnBE,aAAe,SAACC,GACd,IAAMC,EAAQC,KAAKC,MAAMH,EAAQ,IAC3BI,EAASF,KAAKC,MAAM,IAAMH,EAAQ,GAAKC,IAC7C,OAAO,EAAKL,SAASK,GAAS,EAAKL,SAASQ,IAjC3B,EAoCnBC,YAAc,SAACC,GACb,IAAMT,EAAQ,IAAMS,EAAO,IAC3B,OAAO,EAAKP,aAAaF,IAtCR,EAyCnBU,aAAe,SAACC,GAAW,IAAD,EACW,EAAKC,MAAhCC,EADgB,EAChBA,IAAKC,EADW,EACXA,MAAOC,EADI,EACJA,KAAMN,EADF,EACEA,KACpBO,EAAW,IACf,EAAKd,aAAaW,GAClB,EAAKX,aAAaY,GAClB,EAAKZ,aAAaa,GAClB,EAAKP,YAAYC,GAEnB,EAAKQ,SAAS,CAAEC,OAAQF,IACxBL,EAAMQ,kBAlDW,EAqDnBC,aAAe,SAACT,GAAW,IAAD,EACpBU,EAAMV,EAAMW,OAAOC,KACnBC,EAAMb,EAAMW,OAAOtB,MACvB,EAAKiB,WAAL,MAAiBI,GAAMG,EAAvB,KAtDA,EAAKZ,MAAQ,CACXC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNN,KAAM,GACNS,OAAQ,IAPO,E,oCA2DnBO,OAAA,WAAU,IACAP,EAAWQ,KAAKd,MAAhBM,OACR,OACE,8BACE,8BACE,+CAEF,0BAAOS,UAAU,cACf,4BAASC,GAAG,UACV,2CACA,6FAAkE,6BAAlE,UAGF,0BAAMA,GAAG,cAAcC,SAAUH,KAAKhB,cACpC,2BAAOoB,KAAK,SAASC,YAAY,MAAMR,KAAK,MAAMS,IAAI,IAAIC,IAAI,MAAMC,SAAUR,KAAKN,eACnF,2BAAOU,KAAK,SAASC,YAAY,QAAQR,KAAK,QAAQS,IAAI,IAAIC,IAAI,MAAMC,SAAUR,KAAKN,eACvF,2BAAOU,KAAK,SAASC,YAAY,OAAOR,KAAK,OAAOS,IAAI,IAAIC,IAAI,MAAMC,SAAUR,KAAKN,eACrF,2BAAOU,KAAK,SAASC,YAAY,OAAOR,KAAK,OAAOS,IAAI,IAAIC,IAAI,MAAMC,SAAUR,KAAKN,eACrF,2BAAOU,KAAK,SAAS9B,MAAM,aAE7B,yCAAc,gCAASkB,GAAvB,Q,GAjFSiB,IAAMC,WAwFVvC","file":"component---src-pages-index-js-cc161c9ba1988a2b667f.js","sourcesContent":["import React from \"react\"\n\nclass Home extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      red: '',\n      green: '',\n      blue: '',\n      alfa: '',\n      result: '',\n    };\n  }\n\n  hexTable = (value) => {\n    if (value < 10) return value.toString();\n    switch (value) {\n      case 10:\n        return 'a';\n      case 11:\n        return 'b';\n      case 12:\n        return 'c';\n      case 13:\n        return 'd';\n      case 14:\n        return 'e';\n      case 15:\n        return 'f';\n      default:\n    }\n  }\n\n  convertToHex = (color) => {\n    const first = Math.floor(color / 16);\n    const second = Math.floor(16 * (color / 16 - first));\n    return this.hexTable(first) + this.hexTable(second);\n  }\n\n  convertAlfa = (alfa) => {\n    const value = 255 * alfa / 100;\n    return this.convertToHex(value);\n  }\n\n  handleSubmit = (event) => {\n    const { red, green, blue, alfa } = this.state;\n    const hexValue = '#' +\n      this.convertToHex(red) +\n      this.convertToHex(green) +\n      this.convertToHex(blue) +\n      this.convertAlfa(alfa);\n\n    this.setState({ result: hexValue });\n    event.preventDefault();\n  }\n\n  handleChange = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({ [nam]: val });\n  }\n\n  render() {\n    const { result } = this.state;\n    return (\n      <html>\n        <head>\n          <title>rgba to hex</title>\n        </head>\n        < body className=\"is-preload\">\n          < header id=\"header\" >\n            <h1>rgba to hex</h1>\n            <p>A simple webpage which converts rgba values into a hexadecimal <br />\n\t\t\t\t    value</p>\n          </header >\n          <form id=\"signup-form\" onSubmit={this.handleSubmit} >\n            <input type=\"number\" placeholder=\"red\" name=\"red\" min=\"0\" max=\"255\" onChange={this.handleChange} />\n            <input type=\"number\" placeholder=\"green\" name=\"green\" min=\"0\" max=\"255\" onChange={this.handleChange} />\n            <input type=\"number\" placeholder=\"blue\" name=\"blue\" min=\"0\" max=\"255\" onChange={this.handleChange} />\n            <input type=\"number\" placeholder=\"alfa\" name=\"alfa\" min=\"0\" max=\"100\" onChange={this.handleChange} />\n            <input type=\"submit\" value=\"Convert\" />\n          </form >\n          <p> hex value <strong>{result}</strong> </p>\n        </body >\n      </html >\n    )\n  }\n}\n\nexport default Home;"],"sourceRoot":""}